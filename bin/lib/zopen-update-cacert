#!/bin/sh
#
# Updates the cacert in zopen
#
export utildir="$( cd "$(dirname "$0")" >/dev/null 2>&1 && pwd -P )"

. "${utildir}/common.inc"

ZOPEN_CA="${utildir}/../../cacert.pem"

printHelp() 
{
  args=$*
  echo "zopen-update-cacert will update your $ZOPEN_CA file to the latest curl CA certificates extracted from Mozilla"
}

getCaCertFromCurl()
{
  if ! curl -L -o "/tmp/$LOGNAME.cacert.pem" "https://curl.se/ca/cacert.pem"; then
    printError "curl command could not download $url"
  fi
}

updateCaCert()
{
  printInfo "Re-creating $ZOPEN_CA"
  cp "/tmp/$LOGNAME.cacert.pem" $ZOPEN_CA
}

# Main code start here
args=$*
forceUpdate=false
while [[ $# -gt 0 ]]; do
  case "$1" in
    "-f" | "-force" | "--force")
      forceUpdate=true;
      shift
      ;;
    "-h" | "--h" | "-help" | "--help" | "-?" | "-syntax")
      printHelp "${args}"
      exit 4
      ;;
    "-v" | "--v" | "-verbose" | "--verbose")
       verbose=true
      ;;
  esac
  shift;
done

if ! [ -r "${ZOPEN_CA}" ]; then
  forceUpdate=true 
fi
export SSL_CERT_FILE="${ZOPEN_CA}"
export CURL_CA_BUNDLE="${ZOPEN_CA}"

printHeader "Getting latest Ca Cert from Curl"
getCaCertFromCurl

if $forceUpdate; then
  updateCaCert
elif ! diff /tmp/$LOGNAME.cacert.pem $ZOPEN_CA >/dev/null; then
  while true; do
    printWarning "Your local cacert ($ZOPEN_CA) is outdated or does not exist. Would you like to update it? (y, n)"
    update=$(getInput)
    if [ "$update" = "n" ]; then
      exit 0
    elif [ "$update" = "y" ]; then
      break
    fi
  done

  updateCaCert
else
  printInfo "Your cacert ($ZOPEN_CA) is already up to date"
fi
